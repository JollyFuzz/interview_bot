[
    {
        "question": "Что такое SOLID принципы?",
        "expected_answer": "SOLID — это аббревиатура пяти принципов объектно-ориентированного проектирования: Single Responsibility Principle (SRP), Open-Closed Principle (OCP), Liskov Substitution Principle (LSP), Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP).",
        "correct_answer": "SOLID включает пять основных принципов ООП.",
        "incorrect_answer": "Это принцип дизайна баз данных."
    },
    {
        "question": "Какие преимущества у Git перед централизованными системами контроля версий?",
        "expected_answer": "Git является распределённой системой контроля версий, позволяет вести параллельные ветки разработки, обеспечивает высокую скорость операций, локальную работу без подключения к серверу и улучшенную поддержку слияния ветвей.",
        "correct_answer": "Git поддерживает параллельную разработку.",
        "incorrect_answer": "Централизованные системы лучше поддерживают совместную работу."
    },
    {
        "question": "Что такое REST API?",
        "expected_answer": "REST (Representational State Transfer) — архитектурный стиль построения веб-сервисов, основанный на передаче состояния ресурса между клиентом и сервером с использованием HTTP методов (GET, POST, PUT, DELETE и др.).",
        "correct_answer": "REST API используют HTTP методы для взаимодействия.",
        "incorrect_answer": "REST API работают исключительно через WebSocket."
    },
    {
        "question": "Для чего используется паттерн Singleton?",
        "expected_answer": "Паттерн Singleton гарантирует наличие единственного экземпляра класса и предоставление глобального точки доступа к этому экземпляру.",
        "correct_answer": "Singleton ограничивает создание одного экземпляра класса.",
        "incorrect_answer": "Этот паттерн предназначен для многопоточной обработки."
    },
    {
        "question": "Опишите разницу между SQL и NoSQL базами данных.",
        "expected_answer": "SQL базы данных структурированы, имеют строгую схему и используются для хранения реляционных данных. NoSQL базы данных гибче, позволяют хранить нерегулярные структуры данных и предназначены для больших объемов и высокой производительности.",
        "correct_answer": "NoSQL больше подходит для масштабируемых приложений.",
        "incorrect_answer": "SQL лучше подходит для анализа графовых связей."
    }
]